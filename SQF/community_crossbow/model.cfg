class CfgSkeletons
{
		class Default 
		{		
				isDiscrete = 1;
				skeletonInherit = "";
				skeletonBones[] = {};
		};

		class crossbow_skeleton : Default
        {
				isDiscrete = 0;        
				skeletonInherit = "";
				skeletonBones[] = 
				{	
						"carriage", "",
						"left_arm", "",
						"right_arm", "",
						"bolt", ""
				};
        };
};
 
class CfgModels {

	class rotation;
	class Default 
	{
				sectionsInherit="";
				sections[]={};
				skeleton="";
				class Animations {};
	};
	
	class crossbow
	{
			sectionsInherit="";
			sections[]= {};
			skeletonName="crossbow_skeleton";	// same as in cfgskeletons	
			
			class Animations
			{
			
					class translate_carriage
					{
						type = "translation";
						source = "reload";
						memory = 1;
						selection = "carriage";
						axis = "carriage_axis";
						minValue = 0;        //0.9
						maxValue = 0.4;      //1.3
						minPhase = 0;      //0.9
						maxPhase = 0.4;    //1.3
						offset0 = 0; //0.1
						offset1 = 5.5; //-5.5
					};
					class translate_bolt
					{
						type = "translation";
						source = "reload";
						memory = 1;
						selection = "bolt";
						axis = "carriage_axis";
						minValue = 0;
						maxValue = 0.5; //1.3
						offset0 = 0;//16.5 or 0.1
						offset1 = 6;
					};
					class rotate_left_arm
					{
						type = "rotationY";
						source = "reload";
						memory = 1;
						selection = "left_arm";
						axis = "left_axis";
						minValue = 0;
						maxValue = 0.4;
						angle0="rad 0";
						angle1="rad -15";
					};
					class rotate_right_arm
					{ 
						type = "rotationY";
						source = "reload";
						memory = 1;
						selection = "right_arm";
						axis = "right_axis";
						minValue = 0; //0.9
						maxValue = 0.4; //1.3
						angle0="rad 0";
						angle1="rad 15";
					};
					class hide_bolt
					{
						type = "hide";
						source = "reload";
						selection = "bolt";
						hidevalue = 0.01;
					};
					//empty
					class translate_carriage_empty
					{
						type = "translation";
						source = "isEmpty";
						memory = 1;
						selection = "carriage";
						axis = "carriage_axis";
						minValue = 0;     //0.9
						maxValue = 0.4;     //1.3
						minPhase = 0;		//0.9
						maxPhase = 0.4;		//1.3
						offset0 = 0.1;
						offset1 = 5.5;
					};
					class translate_bolt_empty
					{
						type = "translation";
						source = "isEmpty";
						memory = 1;
						selection = "bolt";
						axis = "carriage_axis";
						minValue = 0;
						maxValue = 0.5; //1.3
						offset0 = 0;//16.5 or 0.1
						offset1 = 6;
					};
					class rotate_left_arm_empty
					{
						type = "rotationY";
						source = "isEmpty";
						memory = 1;
						selection = "left_arm";
						axis = "left_axis";
						minValue = 0;
						maxValue = 0.4;
						angle0="rad 0";
						angle1="rad -15";
					};
					class rotate_right_arm_empty
					{ 
						type = "rotationY";
						source = "isEmpty";
						memory = 1;
						selection = "right_arm";
						axis = "right_axis";
						minValue = 0; //0.9
						maxValue = 0.4; //1.3
						
						angle0="rad 0";
						angle1="rad 15";
					};
					class hide_bolt_empty
					{
						type = "hide";
						source = "isEmpty";
						selection = "bolt";
						hidevalue = 0.1;
					};
					
					/*class translate_return_carriage { type = "translation"; source = "reload"; selection = "carriage"; axis = "carriage_axis"; 		minValue = 0; maxValue = 0.5; offset0 = 0; offset1 = 1; };*/
					/*class rotate_left_arm_return	{ type = "rotationY"; source = "reload"; selection = "left_arm"; axis = "left_axis"; 			minValue = 0; maxValue = 0.8; angle0="rad 0"; angle1="rad -15"; };*/
					/*class rotate_right_arm_return	{ type = "rotationY"; source = "reload"; selection = "right_arm"; axis = "right_axis"; 			minValue = 0; maxValue = 0.8; angle0="rad 0"; angle1="rad 15"; };*/
					
			};
	
	};
	class crossbow_cco : crossbow
	{
	};
	class crossbow_fl : crossbow
	{
	};
	class crossbow_cco_fl : crossbow
	{
	};
	class crossbow_scoped : crossbow
	{
	};
	class crossbow_scoped_fl : crossbow
	{
	};
	class crossbow_stock : default
	{
	};
};